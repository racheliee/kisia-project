// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserTypes {
  ADMIN
  STANDARD_USER
  PREMIUM_USER
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  email     String    @unique
  type      UserTypes @default(STANDARD_USER)
  createdAt DateTime  @default(now())

  // many-to-many relation with Url
  urlsAccessed UserUrl[]
}

model Url {
  id          Int      @id @default(autoincrement())
  url         String   @unique
  isMalicious Boolean
  accessCount Int      @default(0) // number of times this url has been asked for verification
  numFeedback Int      @default(0) // number of feedbacks received (used to count false positives and negatives)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // many-to-many relation with User
  users UserUrl[]
}

model UserUrl {
  userId     Int
  urlId      Int
  accessedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  url  Url  @relation(fields: [urlId], references: [id])

  @@id([userId, urlId]) // composite primary key (avoid duplicate entries)Ã’
}
